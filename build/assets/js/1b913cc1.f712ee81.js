"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6958],{4932:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"sdk/v3/guides/liquidity/fetching-positions","title":"fetching-positions","description":"Introduction","source":"@site/docs/sdk/v3/guides/liquidity/03-fetching-positions.md","sourceDirName":"sdk/v3/guides/liquidity","slug":"/sdk/v3/guides/liquidity/fetching-positions","permalink":"/sdk/v3/guides/liquidity/fetching-positions","draft":false,"unlisted":false,"editUrl":"https://github.com/hi-swapx/docs/docs/sdk/v3/guides/liquidity/03-fetching-positions.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"\u83b7\u53d6\u4f4d\u7f6e","sidebar_position":3},"sidebar":"sdkSidebar","previous":{"title":"\u94f8\u9020\u4f4d\u7f6e","permalink":"/sdk/v3/guides/liquidity/minting-position"},"next":{"title":"\u4fee\u6539\u4f4d\u7f6e","permalink":"/sdk/v3/guides/liquidity/modifying-position"}}');var o=i(4848),s=i(8453);const r={sidebar_label:"\u83b7\u53d6\u4f4d\u7f6e",sidebar_position:3},a=void 0,c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Connecting to the NFTPositionManager Contract",id:"connecting-to-the-nftpositionmanager-contract",level:2},{value:"Fetching the Position Ids",id:"fetching-the-position-ids",level:2},{value:"Fetching the Position Info",id:"fetching-the-position-info",level:2}];function l(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(e.p,{children:["This guide will cover how to create (or mint) a liquidity position on the SwapX V3 protocol.\nLike the ",(0,o.jsx)(e.a,{href:"01-position-data",children:"Liquidity Position guide"})," it doesn't have an accompanying example, nevertheless the concepts and functions used here can be found among the various examples that interact with liquidity positions."]}),"\n",(0,o.jsx)(e.admonition,{type:"info",children:(0,o.jsxs)(e.p,{children:["If you need an introduction to liquidity positions, check out the ",(0,o.jsx)(e.a,{href:"01-position-data",children:"Liquidity Position guide"})]})}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.a,{href:"contracts/v3/reference/periphery/NonfungiblePositionManager",children:"NonfungiblePositionManager Contract"})," can be used to create Positions, as well as get information on ",(0,o.jsx)(e.strong,{children:"existing Positions"}),".\nIn this guide, we will fetch ",(0,o.jsx)(e.strong,{children:"all Positions"})," an address has and fetch the ",(0,o.jsx)(e.strong,{children:"detailed Position Data"})," for those positions."]}),"\n",(0,o.jsxs)(e.p,{children:["The guide will ",(0,o.jsx)(e.strong,{children:"cover"}),":"]}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Creating an ethersJS contract to interact with the NonfungiblePositionManager."}),"\n",(0,o.jsx)(e.li,{children:"Fetching all positions for an address."}),"\n",(0,o.jsx)(e.li,{children:"Fetching the position info for the positions."}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"At the end of the guide, given the inputs above, we should be able to mint a liquidity position with the press of a button and view the position on the UI of the web application."}),"\n",(0,o.jsxs)(e.p,{children:["For this guide, we do not need to use the SwapX SDKs, we will only import the contract ABI for the NonfungiblePositionManager Contract from ",(0,o.jsx)(e.a,{href:"https://www.npmjs.com/package/@swapx/v3-periphery",children:(0,o.jsx)(e.code,{children:"@swapx/v3-periphery"})}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"connecting-to-the-nftpositionmanager-contract",children:"Connecting to the NFTPositionManager Contract"}),"\n",(0,o.jsxs)(e.p,{children:["We use ",(0,o.jsx)(e.strong,{children:"ethersJS"})," to interact with the NonfungiblePositionManager Contract. Let's create an ethers Contract:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { ethers } from "ethers";\nimport INONFUNGIBLE_POSITION_MANAGER from "@swapx/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json";\n\nconst provider = new ethers.providers.JsonRpcProvider(rpcUrl);\n\nconst nfpmContract = new ethers.Contract(\n  NONFUNGIBLE_POSITION_MANAGER_CONTRACT_ADDRESS,\n  INONFUNGIBLE_POSITION_MANAGER.abi,\n  provider\n);\n'})}),"\n",(0,o.jsxs)(e.p,{children:["We get the Contract ABI from the 'v3-periphery` package and the contract address from ",(0,o.jsx)(e.a,{href:"https://github.com/SwapX/v3-periphery/blob/main/deploys.md",children:"Github"})]}),"\n",(0,o.jsx)(e.h2,{id:"fetching-the-position-ids",children:"Fetching the Position Ids"}),"\n",(0,o.jsx)(e.p,{children:"We want to fetch all Position Ids for our address. We first fetch the number of positions and then the ids by their indices."}),"\n",(0,o.jsxs)(e.p,{children:["We fetch the number of positions using the ",(0,o.jsx)(e.code,{children:"balanceOf"})," read call:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"const numPositions = await nfpmContract.balanceOf(address);\n"})}),"\n",(0,o.jsx)(e.p,{children:"Next we iterate over the number of positions and fetch the ids:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"const calls = [];\n\nfor (let i = 0; i < numPositions; i++) {\n  calls.push(nfpmContract.tokenOfOwnerByIndex(address, i));\n}\n\nconst positionIds = await Promise.all(calls);\n"})}),"\n",(0,o.jsx)(e.h2,{id:"fetching-the-position-info",children:"Fetching the Position Info"}),"\n",(0,o.jsxs)(e.p,{children:["Now that we have the ids of the Positions associated with our address, we can fetch the position info using the ",(0,o.jsx)(e.code,{children:"positions"})," function."]}),"\n",(0,o.jsx)(e.p,{children:"The solidity function returns a lot of values describing the Position:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-solidity",children:"function positions(\n    uint256 tokenId\n  ) external view returns (\n    uint96 nonce,\n    address operator,\n    address token0,\n    address token1,\n    uint24 fee,\n    int24 tickLower,\n    int24 tickUpper,\n    uint128 liquidity,\n    uint256 feeGrowthInside0LastX128,\n    uint256 feeGrowthInside1LastX128,\n    uint128 tokensOwed0,\n    uint128 tokensOwed1\n    )\n"})}),"\n",(0,o.jsxs)(e.p,{children:["In this example we only care about values needed to interact with positions, so we create an Interface ",(0,o.jsx)(e.code,{children:"PositionInfo"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"interface PositionInfo {\n  tickLower: number;\n  tickUpper: number;\n  liquidity: JSBI;\n  feeGrowthInside0LastX128: JSBI;\n  feeGrowthInside1LastX128: JSBI;\n  tokensOwed0: JSBI;\n  tokensOwed1: JSBI;\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["We fetch the Position data with ",(0,o.jsx)(e.code,{children:"positions"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"const positionCalls = [];\n\nfor (let id of positionIds) {\n  positionCalls.push(nfpmContract.positions(id));\n}\n\nconst callResponses = await Promise.all(positionCalls);\n"})}),"\n",(0,o.jsx)(e.p,{children:"Finally, we map the RPC response to our interface:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"const positionInfos = callResponses.map((position) => {\n  return {\n    tickLower: position.tickLower,\n    tickUpper: position.tickUpper,\n    liquidity: JSBI.BigInt(position.liquidity),\n    feeGrowthInside0LastX128: JSBI.BigInt(position.feeGrowthInside0LastX128),\n    feeGrowthInside1LastX128: JSBI.BigInt(position.feeGrowthInside1LastX128),\n    tokensOwed0: JSBI.BigInt(position.tokensOwed0),\n    tokensOwed1: JSBI.BigInt(position.tokensOwed1),\n  };\n});\n"})}),"\n",(0,o.jsx)(e.p,{children:"We now have an array containing PositionInfo for all positions that our address holds."})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);
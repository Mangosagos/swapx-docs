"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8704],{4403:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"contract/swapx-v3/guides/Implement-A-Swap/single-swaps","title":"\u5355\u7b14\u4ea4\u6362","description":"\u4ea4\u6362\u662f\u4e0e SwapX \u534f\u8bae\u6700\u5e38\u89c1\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u793a\u4f8b\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u60a8\u521b\u5efa\u7684\u4e24\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u5355\u8def\u5f84\u4ea4\u6362\u5408\u7ea6\uff1a","source":"@site/docs/contract/swapx-v3/guides/Implement-A-Swap/single-swaps.md","sourceDirName":"contract/swapx-v3/guides/Implement-A-Swap","slug":"/contract/swapx-v3/guides/Implement-A-Swap/single-swaps","permalink":"/contract/swapx-v3/guides/Implement-A-Swap/single-swaps","draft":false,"unlisted":false,"editUrl":"https://github.com/hi-swapx/docs/docs/contract/swapx-v3/guides/Implement-A-Swap/single-swaps.md","tags":[],"version":"current","frontMatter":{},"sidebar":"contractSidebar","previous":{"title":"\u591a\u8df3\u4ea4\u6362","permalink":"/contract/swapx-v3/guides/Implement-A-Swap/multihop-swaps"},"next":{"title":"SwapXV3Factory","permalink":"/contract/swapx-v3/technical-reference/core/SwapXV3Factory"}}');var s=t(4848),o=t(8453);const r={},i="\u5355\u7b14\u4ea4\u6362",u={},p=[{value:"\u7cbe\u786e\u8f93\u5165",id:"\u7cbe\u786e\u8f93\u5165",level:2},{value:"\u4ea4\u6362\u8f93\u5165",id:"\u4ea4\u6362\u8f93\u5165",level:2},{value:"\u8c03\u7528",id:"\u8c03\u7528",level:2},{value:"\u7cbe\u786e\u8f93\u51fa",id:"\u7cbe\u786e\u8f93\u51fa",level:2},{value:"\u5b8c\u6574\u7684\u5355\u4e00\u4ea4\u6362",id:"\u5b8c\u6574\u7684\u5355\u4e00\u4ea4\u6362",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u5355\u7b14\u4ea4\u6362",children:"\u5355\u7b14\u4ea4\u6362"})}),"\n",(0,s.jsx)(n.p,{children:"\u4ea4\u6362\u662f\u4e0e SwapX \u534f\u8bae\u6700\u5e38\u89c1\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u793a\u4f8b\u5411\u60a8\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u60a8\u521b\u5efa\u7684\u4e24\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u5355\u8def\u5f84\u4ea4\u6362\u5408\u7ea6\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"swapExactInputSingle"}),"\n",(0,s.jsx)(n.li,{children:"swapExactOutputSingle"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u8be5swapExactInputSingle\u51fd\u6570\u7528\u4e8e\u6267\u884c\u7cbe\u786e\u8f93\u5165\u4ea4\u6362\uff0c\u5373\u5c06\u56fa\u5b9a\u6570\u91cf\u7684\u4e00\u79cd\u4ee3\u5e01\u4ea4\u6362\u4e3a\u6700\u5927\u53ef\u80fd\u6570\u91cf\u7684\u53e6\u4e00\u79cd\u4ee3\u5e01\u3002\u6b64\u51fd\u6570\u4f7f\u7528ISwapRouter\u63a5\u53e3\u4e2d\u7684ExactInputSingleParams\u7ed3\u6784\u548c\u51fd\u6570\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u8be5swapExactOutputSingle\u51fd\u6570\u7528\u4e8e\u6267\u884c\u7cbe\u786e\u8f93\u51fa\u4ea4\u6362\uff0c\u5373\u5c06\u6700\u5c0f\u53ef\u80fd\u6570\u91cf\u7684\u4e00\u79cd\u4ee3\u5e01\u4ea4\u6362\u4e3a\u56fa\u5b9a\u6570\u91cf\u7684\u53e6\u4e00\u79cd\u4ee3\u5e01\u3002\u6b64\u51fd\u6570\u4f7f\u7528ISwapRouter\u63a5\u53e3\u4e2d\u7684ExactOutputSingleParams\u7ed3\u6784\u548c\u51fd\u6570\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u4e3a\u4e86\u7b80\u5316\uff0c\u793a\u4f8b\u5bf9\u4ee3\u5e01\u5408\u7ea6\u5730\u5740\u8fdb\u884c\u4e86\u786c\u7f16\u7801\uff0c\u4f46\u5982\u4e0b\u6587\u8fdb\u4e00\u6b65\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u53ef\u4ee5\u4fee\u6539\u5408\u7ea6\u4ee5\u6839\u636e\u6bcf\u4e2a\u4ea4\u6613\u66f4\u6539\u6c60\u548c\u4ee3\u5e01\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u5f53\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u8fdb\u884c\u4ea4\u6613\u65f6\uff0c\u6700\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\u9700\u8981\u8bbf\u95ee\u5916\u90e8\u4ef7\u683c\u6765\u6e90\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\uff0c\u4ea4\u6613\u53ef\u80fd\u4f1a\u9020\u6210\u76f8\u5f53\u5927\u7684\u635f\u5931\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u6ce8\u610f\uff1a\u4ea4\u6362\u793a\u4f8b\u4e0d\u662f\u53ef\u7528\u4e8e\u751f\u4ea7\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u5b9e\u73b0\u4ee5\u7528\u4e8e\u5b66\u4e60\u76ee\u7684\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u7b7e\u8ba2\n\u58f0\u660e\u7528\u4e8e\u7f16\u8bd1\u5408\u7ea6\u7684 solidity \u7248\u672c\uff0c\u5e76abicoder v2\u5141\u8bb8\u5728 calldata \u4e2d\u5bf9\u4efb\u610f\u5d4c\u5957\u6570\u7ec4\u548c\u7ed3\u6784\u8fdb\u884c\u7f16\u7801\u548c\u89e3\u7801\uff0c\u8fd9\u662f\u6267\u884c\u4ea4\u6362\u65f6\u4f7f\u7528\u7684\u529f\u80fd\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u7684\u5408\u7ea6SwapExamples\uff0c\u5e76\u58f0\u660e\u4e00\u4e2aswapRouter\u7c7b\u578b\u7684\u4e0d\u53ef\u53d8\u516c\u5171\u53d8\u91cfISwapRouter\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u8c03\u7528ISwapRouter\u63a5\u53e3\u4e2d\u7684\u51fd\u6570\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"contract SwapExamples {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n    // It should be noted that for the sake of these examples we pass in the swap router as a constructor argument instead of inheriting it.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    ISwapRouter public immutable swapRouter;\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u4e3a\u793a\u4f8b\u786c\u7f16\u7801\u4ee3\u5e01\u5408\u7ea6\u5730\u5740\u548c\u6c60\u8d39\u7528\u7b49\u7ea7\u3002\u5728\u751f\u4ea7\u4e2d\uff0c\u60a8\u53ef\u80fd\u4f1a\u4e3a\u6b64\u4f7f\u7528\u8f93\u5165\u53c2\u6570\u5e76\u5c06\u8f93\u5165\u4f20\u9012\u5230\u5185\u5b58\u53d8\u91cf\u4e2d\uff0c\u4ece\u800c\u5141\u8bb8\u5408\u7ea6\u6839\u636e\u6bcf\u7b14\u4ea4\u6613\u66f4\u6539\u4e0e\u4e4b\u4ea4\u4e92\u7684\u6c60\u548c\u4ee3\u5e01\uff0c\u4f46\u4e3a\u4e86\u6982\u5ff5\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5bf9\u5176\u8fdb\u884c\u786c\u7f16\u7801\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor(ISwapRouter _swapRouter) {\n        swapRouter = _swapRouter;\n    }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u7cbe\u786e\u8f93\u5165",children:"\u7cbe\u786e\u8f93\u5165"}),"\n",(0,s.jsx)(n.p,{children:"\u8c03\u7528\u8005\u5fc5\u987b\u6279\u51c6approve\u5408\u7ea6\u4ece\u8c03\u7528\u5730\u5740\u7684\u8d26\u6237\u4e2d\u63d0\u53d6\u4ee3\u5e01\u624d\u80fd\u6267\u884c\u4ea4\u6362\u3002\u8bf7\u8bb0\u4f4f\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5408\u7ea6\u672c\u8eab\u5c31\u662f\u5408\u7ea6\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u8005\uff08\u6211\u4eec\uff09\u7684\u6269\u5c55\uff1b\u6211\u4eec\u8fd8\u5fc5\u987b\u6279\u51c6 SwapX \u534f\u8bae\u8def\u7531\u5668\u5408\u7ea6\uff0c\u4ee5\u4fbf\u5728\u4ece\u8c03\u7528\u5730\u5740\uff08\u6211\u4eec\uff09\u63d0\u53d6\u4ee3\u5e01\u540e\u4f7f\u7528\u6211\u4eec\u7684\u5408\u7ea6\u5c06\u62e5\u6709\u7684\u4ee3\u5e01\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u7136\u540e\uff0c\u5c06amountDai \u7684 \u4ece\u8c03\u7528\u5730\u5740\u8f6c\u79fb\u5230\u6211\u4eec\u7684\u5408\u7ea6\u4e2d\uff0c\u5e76\u7528\u4f5camount\u4f20\u9012\u7ed9\u7b2c\u4e8c\u4e2a\u7684\u503capprove\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u4ea4\u6362\u8f93\u5165",children:"\u4ea4\u6362\u8f93\u5165"}),"\n",(0,s.jsx)(n.p,{children:"\u8981\u6267\u884c\u4ea4\u6362\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u586b\u5145ExactInputSingleParams\u5fc5\u8981\u7684\u4ea4\u6362\u6570\u636e\u3002\u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u5728\u667a\u80fd\u5408\u7ea6\u63a5\u53e3\u4e2d\u627e\u5230\uff0c\u53ef\u4ee5\u5728\u6b64\u5904\u6d4f\u89c8\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u53c2\u6570\u7b80\u8981\u6982\u8ff0\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"tokenIn\u5165\u7ad9\u4ee3\u5e01\u7684\u5408\u7ea6\u5730\u5740"}),"\n",(0,s.jsx)(n.li,{children:"tokenOut\u51fa\u7ad9\u4ee3\u5e01\u7684\u5408\u7ea6\u5730\u5740"}),"\n",(0,s.jsx)(n.li,{children:"fee\u6c60\u7684\u8d39\u7528\u7b49\u7ea7\uff0c\u7528\u4e8e\u786e\u5b9a\u6267\u884c\u4ea4\u6362\u7684\u6b63\u786e\u6c60\u5408\u7ea6"}),"\n",(0,s.jsx)(n.li,{children:"recipient\u51fa\u7ad9\u4ee4\u724c\u7684\u76ee\u6807\u5730\u5740"}),"\n",(0,s.jsx)(n.li,{children:"deadline\uff1aunix \u65f6\u95f4\uff0c\u8d85\u8fc7\u8be5\u65f6\u95f4\u540e\u4ea4\u6362\u5c06\u5931\u8d25\uff0c\u4ee5\u9632\u6b62\u957f\u671f\u672a\u51b3\u7684\u4ea4\u6613\u548c\u4ef7\u683c\u5267\u70c8\u6ce2\u52a8"}),"\n",(0,s.jsx)(n.li,{children:"amountOutMinimum\uff1a\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u4f46\u8fd9\u5728\u751f\u4ea7\u4e2d\u5b58\u5728\u91cd\u5927\u98ce\u9669\u3002\u5bf9\u4e8e\u5b9e\u9645\u90e8\u7f72\uff0c\u5e94\u4f7f\u7528\u6211\u4eec\u7684 SDK \u6216\u94fe\u4e0a\u4ef7\u683c\u9884\u8a00\u673a\u6765\u8ba1\u7b97\u6b64\u503c - \u8fd9\u6709\u52a9\u4e8e\u9632\u6b62\u7531\u4e8e\u62a2\u5148\u4ea4\u6613\u4e09\u660e\u6cbb\u6216\u5176\u4ed6\u7c7b\u578b\u7684\u4ef7\u683c\u64cd\u7eb5\u800c\u5bfc\u81f4\u4ea4\u6613\u4ef7\u683c\u5f02\u5e38\u7cdf\u7cd5"}),"\n",(0,s.jsx)(n.li,{children:"sqrtPriceLimitX96\uff1a\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u96f6 - \u8fd9\u4f7f\u5f97\u6b64\u53c2\u6570\u5904\u4e8e\u975e\u6d3b\u52a8\u72b6\u6001\u3002\u5728\u751f\u4ea7\u4e2d\uff0c\u6b64\u503c\u53ef\u7528\u4e8e\u8bbe\u7f6e\u4ea4\u6362\u5c06\u63a8\u52a8\u6c60\u7684\u4ef7\u683c\u9650\u5236\uff0c\u8fd9\u6709\u52a9\u4e8e\u9632\u6b62\u4ef7\u683c\u5f71\u54cd\u6216\u8bbe\u7f6e\u5404\u79cd\u4e0e\u4ef7\u683c\u76f8\u5173\u7684\u673a\u5236\u4e2d\u7684\u903b\u8f91\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u8c03\u7528",children:"\u8c03\u7528"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u7cbe\u786e\u8f93\u51fa",children:"\u7cbe\u786e\u8f93\u51fa"}),"\n",(0,s.jsx)(n.p,{children:"\u7cbe\u786e\u8f93\u51fa\u5c06\u8f93\u5165\u4ee3\u5e01\u7684\u6700\u5c0f\u53ef\u80fd\u6570\u91cf\u4e0e\u8f93\u51fa\u4ee3\u5e01\u7684\u56fa\u5b9a\u6570\u91cf\u8fdb\u884c\u4ea4\u6362\u3002\u8fd9\u662f\u4e0d\u592a\u5e38\u89c1\u7684\u4ea4\u6362\u65b9\u5f0f - \u4f46\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\u90fd\u5f88\u6709\u7528\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u56e0\u4e3a\u6b64\u793a\u4f8b\u5728\u9884\u671f\u4ea4\u6362\u7684\u60c5\u51b5\u4e0b\u8f6c\u79fb\u4e86\u5165\u7ad9\u8d44\u4ea7 - \u6240\u4ee5\u5728\u6267\u884c\u4ea4\u6362\u540e\u53ef\u80fd\u4f1a\u5269\u4e0b\u4e00\u4e9b\u5165\u7ad9\u4ee3\u5e01\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u4ea4\u6362\u7ed3\u675f\u65f6\u5c06\u5176\u8fd4\u8fd8\u7ed9\u8c03\u7528\u5730\u5740\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u8c03\u7528"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"/// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WXOC.\n/// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n/// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n/// @param amountOut The exact amount of WETH9 to receive from the swap.\n/// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n/// @return amountIn The amount of DAI actually spent in the swap.\nfunction swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specified `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to achieve a better swap.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u5b8c\u6574\u7684\u5355\u4e00\u4ea4\u6362",children:"\u5b8c\u6574\u7684\u5355\u4e00\u4ea4\u6362"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\ncontract SwapExamples {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n\n    ISwapRouter public immutable swapRouter;\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n    constructor(ISwapRouter _swapRouter) {\n        swapRouter = _swapRouter;\n    }\n\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WXOC.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: DAI,\n                tokenOut: WETH9,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(DAI, address(swapRouter), 0);\n            TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(6540);const s={},o=a.createContext(s);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);
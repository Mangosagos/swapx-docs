"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4240],{3991:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"sdk/v2/guides/getting-pair-addresses","title":"getPair","description":"The most obvious way to get the address for a pair is to call getPair on the factory. If the pair exists, this function will return its address, else address(0) (0x0000000000000000000000000000000000000000).","source":"@site/docs/sdk/v2/guides/05-getting-pair-addresses.md","sourceDirName":"sdk/v2/guides","slug":"/sdk/v2/guides/getting-pair-addresses","permalink":"/sdk/v2/guides/getting-pair-addresses","draft":false,"unlisted":false,"editUrl":"https://github.com/hi-swapx/docs/docs/sdk/v2/guides/05-getting-pair-addresses.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"\u7b2c\u4e94\u6b65\uff1a\u83b7\u53d6\u914d\u5bf9\u5730\u5740","sidebar_position":4},"sidebar":"sdkSidebar","previous":{"title":"\u7b2c\u56db\u6b65\uff1a\u8d38\u6613","permalink":"/sdk/v2/guides/trading"},"next":{"title":"\u53c2\u8003","permalink":"/category/\u53c2\u8003"}}');var n=s(4848),i=s(8453);const d={sidebar_label:"\u7b2c\u4e94\u6b65\uff1a\u83b7\u53d6\u914d\u5bf9\u5730\u5740",sidebar_position:4},a="getPair",c={},l=[{value:"Examples",id:"examples",level:2},{value:"TypeScript",id:"typescript",level:3}];function o(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"getpair",children:"getPair"})}),"\n",(0,n.jsxs)(t.p,{children:["The most obvious way to get the address for a pair is to call ",(0,n.jsx)(t.a,{href:"contracts/v2/reference/smart-contracts/factory#getpair",children:"getPair"})," on the factory. If the pair exists, this function will return its address, else ",(0,n.jsx)(t.code,{children:"address(0)"})," (",(0,n.jsx)(t.code,{children:"0x0000000000000000000000000000000000000000"}),")."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:'The "canonical" way to determine whether or not a pair exists.'}),"\n",(0,n.jsx)(t.li,{children:"Requires an on-chain lookup."}),"\n"]}),"\n",(0,n.jsx)(t.h1,{id:"create2",children:"CREATE2"}),"\n",(0,n.jsxs)(t.p,{children:["Thanks to some ",(0,n.jsx)(t.a,{href:"https://github.com/SwapX/SwapX-v2-core/blob/master/contracts/SwapXV2Factory.sol#L32",children:"fancy footwork in the factory"}),", we can also compute pair addresses ",(0,n.jsx)(t.em,{children:"without any on-chain lookups"})," because of ",(0,n.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-1014",children:"CREATE2"}),". The following values are required for this technique:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\u53c2\u6570"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"\u8bf4\u660e"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"address"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,n.jsx)(t.a,{href:"contracts/v2/reference/smart-contracts/factory",children:"factory address"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"salt"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"keccak256(abi.encodePacked(token0, token1))"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"keccak256(init_code)"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f"})})]})]})]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"token0"})," must be strictly less than ",(0,n.jsx)(t.code,{children:"token1"})," by sort order."]}),"\n"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Can be computed offline."}),"\n",(0,n.jsxs)(t.li,{children:["Requires the ability to perform ",(0,n.jsx)(t.code,{children:"keccak256"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,n.jsxs)(t.p,{children:["This example makes use of the ",(0,n.jsx)(t.a,{href:"reference/getting-started",children:"SwapX V2 SDK"}),". In reality, the SDK computes pair addresses behind the scenes, obviating the need to compute them manually like this."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import { FACTORY_ADDRESS, INIT_CODE_HASH } from "@swapx/v2-sdk";\nimport { pack, keccak256 } from "@ethersproject/solidity";\nimport { getCreate2Address } from "@ethersproject/address";\n\nconst token0 = "0xCAFE000000000000000000000000000000000000"; // change me!\nconst token1 = "0xF00D000000000000000000000000000000000000"; // change me!\n\nconst pair = getCreate2Address(\n  FACTORY_ADDRESS,\n  keccak256(["bytes"], [pack(["address", "address"], [token0, token1])]),\n  INIT_CODE_HASH\n);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>a});var r=s(6540);const n={},i=r.createContext(n);function d(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);